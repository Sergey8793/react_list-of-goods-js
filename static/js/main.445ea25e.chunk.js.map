{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReverse","visibleGoods","goods","prepeardeGoods","sort","item1","item2","localeCompare","length","reverse","getPreparedGood","className","type","cn","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,iBACtBC,EAAc,SAyBb,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA1BR,SAAyBC,EAAzB,GAA2D,IAAzBL,EAAwB,EAAxBA,UAAWE,EAAa,EAAbA,UACrCI,EAAc,YAAOD,GAmB3B,OAjBIL,GACFM,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXT,GACFI,EAAeM,UAGVN,EAMcO,CAAgBlB,EACnC,CAAEK,YAAWE,cAEf,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYhB,IAAcJ,IAG9BqB,QAAS,kBAAMhB,EAAaL,IAR9B,iCAaA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYhB,IAAcH,IAG9BoB,QAAS,kBAAMhB,EAAaJ,IAR9B,4BAaA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAad,IAGjBe,QAAS,kBAAMd,GAAcD,IAR/B,sBAaEA,GAAaF,IACb,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPd,GAAa,GACbF,EAAa,KALjB,sBAcJ,6BACGG,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC3GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.445ea25e.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'alphabetically';\nconst SORT_LENGTH = 'length';\n\nfunction getPreparedGood(goods, { sortField, isReverse }) {\n  const prepeardeGoods = [...goods];\n\n  if (sortField) {\n    prepeardeGoods.sort((item1, item2) => {\n      switch (sortField) {\n        case SORT_ALPHABETICALLY:\n          return item1.localeCompare(item2);\n        case SORT_LENGTH:\n          return item1.length - item2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    prepeardeGoods.reverse();\n  }\n\n  return prepeardeGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods = getPreparedGood(goodsFromServer,\n    { sortField, isReverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            {\n              'is-light': sortField !== SORT_ALPHABETICALLY,\n            },\n          )}\n          onClick={() => setSortField(SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            {\n              'is-light': sortField !== SORT_LENGTH,\n            },\n          )}\n          onClick={() => setSortField(SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            {\n              'is-light': !isReverse,\n            },\n          )}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(isReverse || sortField) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReverse(false);\n              setSortField('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(item => (\n          <li key={item} data-cy=\"Good\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}